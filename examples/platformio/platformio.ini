;
; You can setup `custom_nanopb_protos` `nanopb_options` vars to generate code from proto files
;
; Generator will use next folders:
;
;   `$BUILD_DIR/nanopb/generated-src` - `*.pb.h` and `*.pb.c` files
;   `$BUILD_DIR/nanopb/md5` - MD5 files to track changes in source .proto/.options
;
; Compiled `.pb.o` files will be located under `$BUILD_DIR/nanopb/generated-build`
;
; Example:

[env:pio_with_options]
platform = native
lib_deps = Nanopb

src_filter =
    +<pio_with_options.c>

; All path are relative to the `$PROJECT_DIR`
custom_nanopb_protos =
    +<proto/pio_with_options.proto>
custom_nanopb_options =
    --error-on-unmatched

[env:pio_without_options]
platform = native
lib_deps = Nanopb

src_filter =
    +<pio_without_options.c>

; All path are relative to the `$PROJECT_DIR`
custom_nanopb_protos =
    +<proto/pio_without_options.proto>


[env:pio_esp32_idf]
platform = espressif32
board = firebeetle32
framework = espidf
lib_deps = Nanopb

; Warning: the 'src_filter' option cannot be used with ESP-IDF. Select source files to build in the project CMakeLists.txt file.
; So, we specified source files in src/CMakeLists.txt

; All path are relative to the `$PROJECT_DIR`
custom_nanopb_protos =
    +<proto/pio_without_options.proto>

monitor_speed = 115200

[env:pio_esp32_arduino]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = Nanopb

; the src_filter is only for pointing to the main file
src_filter =
    +<pio_esp32_arduino.cpp>

; All path are relative to the `$PROJECT_DIR`
custom_nanopb_protos =
    +<proto/pio_without_options.proto>

monitor_speed = 115200
